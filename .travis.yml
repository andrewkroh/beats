# DO NOT EDIT - AUTO-GENERATED
# This file was generated by 'mage update:travisCI' from a template at
# dev-tools/ci/templates/travis.yml.tmpl.

sudo: required
dist: trusty
services:
  - docker

language: go

go_import_path: github.com/elastic/beats

stages:
  - test
  - crosscompile
  - check

env:
  global:
    # Cross-compile for amd64 only to speed up testing.
    - GOX_FLAGS="-arch amd64"

    # Build snapshots when testing packaging.
    - SNAPSHOT=true

    # Dependency version.
    - DOCKER_COMPOSE_VERSION=1.21.0
    - GO_VERSION="$(cat .go-version)"
    # Newer versions of minikube fail on travis. See https://github.com/kubernetes/minikube/issues/2704.
    - TRAVIS_MINIKUBE_VERSION=v0.25.2

jobs:
  include:
    - os: linux
      stage: check
      env:
        - BUILD_CMD="mage"
        - TARGETS="check"

    - os: linux
      stage: test
      env:
        - BUILD_CMD="mage -d libbeat"
        - TARGETS="unitTest integTest"

    - os: osx
      stage: test
      env:
        - BUILD_CMD="mage -d libbeat"
        - TARGETS="unitTest"

    - os: linux
      stage: test
      env:
        - BUILD_CMD="mage -d auditbeat"
        - TARGETS="unitTest integTest"

    - os: osx
      stage: test
      env:
        - BUILD_CMD="mage -d auditbeat"
        - TARGETS="unitTest"

    - os: linux
      stage: test
      env:
        - BUILD_CMD="mage -d filebeat"
        - TARGETS="unitTest integTest"

    - os: osx
      stage: test
      env:
        - BUILD_CMD="mage -d filebeat"
        - TARGETS="unitTest"

    - os: linux
      stage: test
      env:
        - BUILD_CMD="mage -d heartbeat"
        - TARGETS="unitTest integTest"

    - os: osx
      stage: test
      env:
        - BUILD_CMD="mage -d heartbeat"
        - TARGETS="unitTest"

    - os: linux
      stage: test
      env:
        - BUILD_CMD="mage -d journalbeat"
        - TARGETS="unitTest"

    - os: linux
      stage: test
      env:
        - BUILD_CMD="mage -d metricbeat"
        - TARGETS="unitTest integTest"

    - os: osx
      stage: test
      env:
        - BUILD_CMD="mage -d metricbeat"
        - TARGETS="unitTest"

    - os: linux
      stage: test
      env:
        - BUILD_CMD="mage -d packetbeat"
        - TARGETS="unitTest"

    - os: osx
      stage: test
      env:
        - BUILD_CMD="mage -d packetbeat"
        - TARGETS="unitTest"

    - os: linux
      stage: test
      env:
        - BUILD_CMD="mage -d winlogbeat"
        - TARGETS="unitTest"

    - os: linux
      stage: test
      env:
        - BUILD_CMD="mage -d x-pack/libbeat"
        - TARGETS="unitTest integTest"

    - os: linux
      stage: test
      env:
        - BUILD_CMD="mage -d x-pack/auditbeat"
        - TARGETS="unitTest integTest"

    - os: osx
      stage: test
      env:
        - BUILD_CMD="mage -d x-pack/auditbeat"
        - TARGETS="unitTest"

    - os: linux
      stage: test
      env:
        - BUILD_CMD="mage -d x-pack/filebeat"
        - TARGETS="unitTest integTest"

    - os: osx
      stage: test
      env:
        - BUILD_CMD="mage -d x-pack/filebeat"
        - TARGETS="unitTest"

    - os: linux
      stage: test
      env:
        - BUILD_CMD="mage -d x-pack/functionbeat"
        - TARGETS="unitTest integTest"

    - os: linux
      stage: test
      env:
        - BUILD_CMD="mage -d x-pack/journalbeat"
        - TARGETS="unitTest"

    - os: linux
      stage: test
      env:
        - BUILD_CMD="mage -d x-pack/metricbeat"
        - TARGETS="unitTest integTest"

    - os: osx
      stage: test
      env:
        - BUILD_CMD="mage -d x-pack/metricbeat"
        - TARGETS="unitTest"

    - os: linux
      stage: test
      env:
        - BUILD_CMD="mage -d x-pack/packetbeat"
        - TARGETS="unitTest"

    - os: osx
      stage: test
      env:
        - BUILD_CMD="mage -d x-pack/packetbeat"
        - TARGETS="unitTest"

    - os: linux
      stage: test
      env:
        - BUILD_CMD="mage -d x-pack/winlogbeat"
        - TARGETS="unitTest"

    - os: linux
      stage: crosscompile
      env:
        - BUILD_CMD="make -C libbeat"
        - TARGETS="gox"

    - os: linux
      stage: crosscompile
      env:
        - BUILD_CMD="make -C auditbeat"
        - TARGETS="gox"

    - os: linux
      stage: crosscompile
      env:
        - BUILD_CMD="make -C filebeat"
        - TARGETS="gox"

    - os: linux
      stage: crosscompile
      env:
        - BUILD_CMD="make -C heartbeat"
        - TARGETS="gox"

    - os: linux
      stage: crosscompile
      env:
        - BUILD_CMD="make -C journalbeat"
        - TARGETS="gox"

    - os: linux
      stage: crosscompile
      env:
        - BUILD_CMD="make -C metricbeat"
        - TARGETS="gox"

    - os: linux
      stage: crosscompile
      env:
        - BUILD_CMD="make -C packetbeat"
        - TARGETS="gox"

    - os: linux
      stage: crosscompile
      env:
        - BUILD_CMD="make -C winlogbeat"
        - TARGETS="gox"

    - os: linux
      stage: crosscompile
      env:
        - BUILD_CMD="make -C x-pack/libbeat"
        - TARGETS="gox"

    - os: linux
      stage: crosscompile
      env:
        - BUILD_CMD="make -C x-pack/auditbeat"
        - TARGETS="gox"

    - os: linux
      stage: crosscompile
      env:
        - BUILD_CMD="make -C x-pack/filebeat"
        - TARGETS="gox"

    - os: linux
      stage: crosscompile
      env:
        - BUILD_CMD="make -C x-pack/functionbeat"
        - TARGETS="gox"

    - os: linux
      stage: crosscompile
      env:
        - BUILD_CMD="make -C x-pack/heartbeat"
        - TARGETS="gox"

    - os: linux
      stage: crosscompile
      env:
        - BUILD_CMD="make -C x-pack/journalbeat"
        - TARGETS="gox"

    - os: linux
      stage: crosscompile
      env:
        - BUILD_CMD="make -C x-pack/metricbeat"
        - TARGETS="gox"

    - os: linux
      stage: crosscompile
      env:
        - BUILD_CMD="make -C x-pack/packetbeat"
        - TARGETS="gox"

    - os: linux
      stage: crosscompile
      env:
        - BUILD_CMD="make -C x-pack/winlogbeat"
        - TARGETS="gox"


addons:
  apt:
    update: true
    packages:
      - python-virtualenv
      - libpcap-dev
      - xsltproc
      - libxml2-utils
      - libsystemd-journal-dev

before_install:
  # Use conservative file modes when creating files.
  - umask 022
  - chmod -R go-w $GOPATH/src/github.com/elastic/beats

  # Docker-compose installation.
  - sudo rm /usr/local/bin/docker-compose || true
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin

  # Python setup.
  - python --version
  - pyenv versions
  - pyenv global 2.7.14
  - python --version
  - if [ $TRAVIS_OS_NAME = osx ]; then pip install virtualenv; fi

  # Mage tool setup.
  - make mage

script:
  - ${BUILD_CMD:-make} $TARGETS

notifications:
  slack:
    on_success: change
    on_failure: always
    on_pull_requests: false
    rooms:
      secure: "e25J5puEA31dOooTI4T+K+zrTs8XeWIGq2cgmiPt9u/g7eqWeQj1UJnVsr8GOu1RPDyuJZJHXqfrvuOYJTdHzXbwjD0JTbwwVVZMkkZW2SWZHG46HCXPiucjWXEr3hXJKBJDDpIx6VxrN7r17dejv1biQ8QuEFZfiB1H8kbH/ho="

after_success:
  # Copy full.cov to coverage.txt because codecov.io requires this file
  - test -f auditbeat/build/coverage/full.cov && bash <(curl -s https://codecov.io/bash) -f auditbeat/build/coverage/full.cov
  - test -f filebeat/build/coverage/full.cov && bash <(curl -s https://codecov.io/bash) -f filebeat/build/coverage/full.cov
  - test -f heartbeat/build/coverage/full.cov && bash <(curl -s https://codecov.io/bash) -f heartbeat/build/coverage/full.cov
  - test -f libbeat/build/coverage/full.cov && bash <(curl -s https://codecov.io/bash) -f libbeat/build/coverage/full.cov
  - test -f metricbeat/build/coverage/full.cov && bash <(curl -s https://codecov.io/bash) -f metricbeat/build/coverage/full.cov
  - test -f packetbeat/build/coverage/full.cov && bash <(curl -s https://codecov.io/bash) -f packetbeat/build/coverage/full.cov
