load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "integration.go",
        "metadata_services.go",
        "metrics_requester.go",
        "metricset.go",
        "response_parser.go",
        "timeseries.go",
    ],
    importpath = "github.com/elastic/beats/v7/x-pack/metricbeat/module/googlecloud/metrics",
    visibility = ["//visibility:public"],
    deps = [
        "//libbeat/common:go_default_library",
        "//libbeat/common/cfgwarn:go_default_library",
        "//libbeat/logp:go_default_library",
        "//metricbeat/mb:go_default_library",
        "//x-pack/metricbeat/module/googlecloud:go_default_library",
        "//x-pack/metricbeat/module/googlecloud/metrics/compute:go_default_library",
        "@com_github_golang_protobuf//ptypes:go_default_library",
        "@com_github_golang_protobuf//ptypes/duration:go_default_library",
        "@com_github_golang_protobuf//ptypes/timestamp:go_default_library",
        "@com_github_pkg_errors//:go_default_library",
        "@com_google_cloud_go//monitoring/apiv3:go_default_library",
        "@org_golang_google_api//iterator:go_default_library",
        "@org_golang_google_api//option:go_default_library",
        "@org_golang_google_genproto//googleapis/api/metric:go_default_library",
        "@org_golang_google_genproto//googleapis/monitoring/v3:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "metrics_requester_test.go",
        "response_parser_test.go",
    ],
    data = glob(["_meta/testdata/**"]),
    embed = [":go_default_library"],
    deps = [
        "//libbeat/logp:go_default_library",
        "@com_github_golang_protobuf//ptypes/duration:go_default_library",
        "@com_github_stretchr_testify//assert:go_default_library",
    ],
)
