// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// +build integration

package server

import (
	s "github.com/elastic/beats/libbeat/common/schema"
	c "github.com/elastic/beats/libbeat/common/schema/mapstrstr"
	"time"
)

var (
	schema = s.Schema{
		// Returns information about the SQL Server, Full-Text, and SQL Server Agent services in the current instance
		// of SQL Server. Use this dynamic management view to report status information about these services.
		"services": s.Object{
			"name":                                c.Str("servicename"),
			"startup_type":                        c.Int("startup_type"),
			"startup_desc":                        c.Str("startup_desc"),
			"status":                              c.Int("status"),
			"status_desc":                         c.Str("status_desc"),
			"process_id":                          c.Int("process_id"),
			"last_startup_time":                   c.Time(time.RFC3339, "last_startup_time"),
			"account":                             c.Str("service_account"),
			"filename":                            c.Str("filename"),
			"is_clustered":                        c.Str("is_clustered"),
			"cluster_nodename":                    c.Str("cluster_nodename"),
			"instant_file_initialization_enabled": c.Str("instant_file_initialization_enabled"),
		},
		// Returns one row for each memory dump file generated by the SQL Server Database Engine. Use this dynamic
		// management view to troubleshoot potential issues.
		"memory_dump": s.Object{
			"filename":      c.Str("filename"),
			"creation_time": c.Time(time.RFC3339, "creation_time"),
			"size_in_bytes": c.Int("size_in_bytes"),
		},
	}
)
