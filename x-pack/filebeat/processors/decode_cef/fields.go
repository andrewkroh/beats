// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package decode_cef

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("filebeat", "decode_cef", asset.ModuleFieldsPri, AssetDecodeCef); err != nil {
		panic(err)
	}
}

// AssetDecodeCef returns asset data.
// This is the base64 encoded gzipped contents of processors/decode_cef.
func AssetDecodeCef() string {
	return "eJzsPWlz47aS3+dXdPnLTKpkx57r7fNW3pbXGj9razyj9ZHd2tqqBCJbEtYgwACgZObXb+GiSB2UTFKTjJX5kIolsm80uhuN1jE8Yn4OEY5fAWiqGZ5DHyMRI1x+uoJUigiVEhLGFFmsXgHEqCJJU00FP4d/vAIAuBRJIjh8miHXcCVkQjS8ufx09QPERJOTV+DfPrdPHwMnCQac5p/OUzyHiRRZ6j9Zg8T8+/ccYhyTjGnQU4RfY0vpLxGOfy2ROpdUowLCmMUPYykS+/zlp6sCVIJKkQmCFqCnVMGvFogY/R9G+gQGGiLBNaFchTdhiiTGIAggPDbfFPDwSSNXVPCCZ/OvzHeZ9xlK82zxeZDBI+ZzIePS5xskYf797ICAGBc0qhQjOqYRMc9DpjCGUW6/9fyevFqhJcYZjfBkhjwWsi1FBkYgyAEGPSXaaCfOIox3o8U9rdsRM3RA2lOzD2V5DpuQg2aZ/RIxotQvNG5H1QOnv2UINEau6ZhioTuLxEJcQ4jCGUqq8x1w4xNJUuNUfkaZH1/TyXQ3wgZJKqQmPMIKRSdwP0WYEUZjUFpSPjF/ZGa1S4QH/sjFnPfgs5j3KuBuMKZZ0gNDQM+u3YKeMkjKNU5QlmGeHr/7aQXc++OPPwWQfzuGf/lpAffvx2enPy2ArwrP/Led0u6mQuryA1URraIsfJNaQVx2ulvQXgrGMAr4HjE/tmKClFCpICJSUjQiLJzRwiVaN3hSgrbsF8vUkglyfRHHEpWqPBBopunSxxWijTYHQyAOQBDNhYzu6GRq3TrHSAtZLD2za/i1tyzAFbL6XPVFQihfS9iqFtdS1/9yB7GFYkF3TOK1UPpL1caeTeFUKL0H0gbLiJ9FlAUBg37HRN2QqM7YdiTu5uJyTyb3RbeyuBrItxghTfU93WAsMdHLX6zwrWmCQDTMpzSaAuVjG/2ZNU9GItOlvWROFEiDcbYISlZFVCcJQ+j/CN7Ksp0RWap/F7xrA7+XhCtGNMaN/ddO0I0UPj1plJywQb97y6hiergd7AFFnnahyDxtosMaun5eCfaeTdqsGup1ZFv71vleNJ2mzCcjQym0iARrKtiLBShgOENm5Gch9kKQWQ7bru/vhz3737se3N1dz9724B4ZR92D4ddhDwY3wwvz3wvzgAnclADBNyhgRBTa7PZSZFyvZYEJPqmlHyLzLhClRETN0oI51VOXfPrY9lrMISE8t/5JWY9pv1ZmK3ZeVIwUyhnG/waWFIgIhxGCSKg2IOkYqAaq4GwTJ7lGNVhv3ttY+JIlI5chWCigjZcYo5Q27BuJjMc9kMiIpjOfWCMokcnI/hWj0pQ7DbqnBFdTmvYgQcJNKG+XhU3ZDetjJubmU5u+rwVTx+PXrJme6pgUmbZcNmDyBK6EDIbasy8Z+MALdK5UUebZZa0LeBVkG3iPMqVFgnJPniKA79pRlNhsHvkPQharVkQXQjNrYYuYROIYpTKCpRwIN3kDRz0X8tFlhS6aMevJfjl7HwBtkH4JZdeZQkpkUcqIhLEijTDOGMvht4www3ZcySreXP1n/8sP2wn9J4rPRFOdxRuiQJGN2NY4kDkQlBPm3LAzYRcWLmnjtSonaCM0S3IHiRpCBZ+0ptTD2CepbXOwGku2Fkz48wxYTUXGYrNRkB1sZs0eVaWBixh7MJ8iB2L/sCtkRigjI7bJM5UAtE+57ugTRIIJfqwwRWlJneITiTGiCWHere6gqZbZlRXyf1Eei7lal9Ov8UHbaRoK2WzvWhSyUiF1EIKNh0ao54gcTm2s8/HDh3cfdiDERagb0vZt1AylmNHYm/AibS+LxIfAaw3Ox0SVbZOOF6Zf1OcDkEEfzk4/9ODo7PTDkbFIX2f1X+7MbtviSVn/ltTXah3T2+m5QzmjEbalRzkwoImcoA7JdxF1biWjg6R22aHpAuSqb9tpd34G0Y1Xk3kRyFijNDG1DcYLoP9qPOvCLgmMqcQ5YewEfl6/AE8NHzuuu2+S6G/E1zy2s+b2cDuwwjF6XAAGA3mh4IpfVAo1TInZX9H+SSfcZMVW7yF73i61B4WyeYWxZsvNFEqzaAb9ZXfE4eHL4L9dOC+F0O5RqmCCHCUxG+2ya7NPDPpwuhtDe4oiAksGp4kUqAoO036z0R9XXdkJfEoIZWFn86m3GGvkkJA0tXmhz1oCM77078ITiRFNqVnrJoAwyWxMY6JtJpVmOrxNVThB2EVkQ0lnlOEEWxV0dZ7SKESIjrGjizihnCotiRbyqAdHBt2RKx8c/TNDpY+CMOtF/9rsWoHKExgEO6o6lUjTGdU54BNGmdGF4EuWNg9hXYHPK2xJJLCQidmZlhjZLtZv44Y6dj578zhmN72wB2GNi1nuGE2TR+ShFu5Pd2uRdpca24igkhXvklPUEXdpSwNXTBBN+WQoKNdnn8kIm1f8GPP1htBzMSUzk8FEQkpUqeAx5RNgBof3D/CJRFMfe6ngapxv8afFZqk6LCMvizSTqVBFxFbG+Fx+3x0Yv+9fPr99ovGs0enYV3+6NBeunKtJkhbNQyFXNqssIcXnrgAqgAtta+e5+Z7wHISemsCCu80wptZ/EJnvysFhKOrtd6+oty9fUdUdomEhz+tsLDIJYw8QUgPxj9BchaUNRvhds3RgVvnu5anw/YtgaTCcffRB8AFsaSVu16uvPuYvq86AKsL9P1ZxBxA0ls305ShuvVf8Pll5+Tbo+hjWm9+2yneIiKcSiw6FzhUGDwpBpcRwz3LXgoP4CAQSIbG4ydArvQMqS1NGMXZY3QlkKpSidceOKzJ5mcrvrzC6PhI9bOUfQCjrGF3vrQ9b+Qfg9u8s2PVufwcevf4VffIEfud69+I4FL2v9/gHq/cDcPaO0fXO/mD1fjB+fn1Z4GD1fgClBcfoh7/0XhHHoej94196r4jjJeu9TyVubjLZet2I52tuY86tbgNgS0+4UASRSJKMhytWU6Jce0roI2f+ZkqpH8roUEiNMRzD0emRbbzx94BASDg6cx+FWzP13P7Jr0sYGt0NMKJxImTelM5bTCUq5NpZR+TBLZqQfDuQkHRi+5X4JLQG+RKP8h12mULzJJUg5jwAor87/aloigkxS9cOiqDjPDRUf/KX5Y5+vBGcaiF/7FP1+OMtknhzJ5hlPzSANe6xvHCith4ms5MnWL7aKmdbk1wDpXa3wrb2KptXrkhEWXUoxbMNaOxhbEBf7f68yxUTE7tSCAd8ShmNqF7AWG6ixBnKfAdGurjA3+W9D6uPhlc+zLsD5xIGXKMck6h5O2sAAIKXbuukJHpEbRyOvUGH5il/p3aHlrqOr6KQ519FsS3++76FUm73q6Xkq3fW30hbDMd6V1UNSc4EiZu7n9VhN6FVNHWga+6h1BK2j2sy4eKK36bXucVn0NbGn3gQzqJqbupc8OIidmLvu4+wwskS7cq5T+Ra5qGTvpaV7sdVlK+auFsKvlm9aL0uD61YvhJ6c3MDcQx5nudwfX2eJOdGXRISyhhVGAkeK1CURwiYimgKb/6DcDhTGs7+/rfTH+pY7WLShWHVjrgIRt7UhPZ9/2e1FbnVFaAqyXvtXF9F9W3uzjiJtW9i37tw2oukvqW/vSCQxx07lMJ3LPkUZ9DI4w49iXUkFc9b3AiRaHKzYpWblGxs0lRUavPkBEtjw30sXCIiPrQ3e5lVVTH/xGnGrmY0eXSd67Hffc10JJpvXH2qUkZy53KEg9WDTGX+Yha8VllktqbXRtivx4SyTOLrTRS1Tn/u3QYfpjISvjbJu59ibtPrQCjlkUSizDM+luytyy243hTZjSnDS4lEY3NTN2Zuo38jSwPQbo2RhbopszePXRM1bSov866zWgOpBkmLjJQbjSxL0yGEKKwlwzM1SU8NDTciLgZvdi1mRpSGxCKoFTZvEeV9KeULFrHgLIc3Rh4i00C1gpTo6aYKiXllSHRjXV9ljFkEwV0agD1j+yyzZThLkw1BqVbIxnV0oEyoajPFaQFBlWVSg/OO/r5e9NvcpnlxRxytRmb5QVlWjG9SmmIPlDC5WA9QRycbwtExw6fmV2Auli9UrBadSekRX3lGtan2HOOY2p19CeqmmjRhzHIQCrVd1qiNn16UgI2/9jdGmdn5fU3VxC1hZI6t11m8rihjeBwhmNhllIObvqsg48zmWmj2pc19jYVeWlXA3eCWorz9vEL2QrA1NHbTjvJNus87P8X44y2km6aQv6TfSvrfxQr9M1PpB2K3CPGIHFEtjcmEqe8TOjPEWduKURPK1PLA0hO4yZimx4xytFUqiiqM2ysGdo9yyGxk/r8m8bQvc5yDfceXgzfONBUsvuoyMhcs3jUy96i7CM5tbuUx12PrOkovY949VvfEdByuV2S/S7juyWhTly1H7LtpoNMAPaAsB+lF8rA9UA8k7SNW300anYTsu6HqInKvmPvuEbwkc3tu3Wl17xaJajcjV1oIQDiQLKa6NCPa16cxrhy3wtGIxJASpQz0I9tfkLlx/3YUShi84vwAYUrYU08OKKWQ5nGJOpMcIuMaFofgp09nb9+933TwLfG3DJW+ZBS5Lk2gbVXjVSiPL+z04nUezaPcQpDgGp+a6hT6iz8WPRJcG5KWRiF6fEWhCmN4UxlSc31/P4RbtANS5SYTDESLR9p8KI9/vbnQblBPRavinWU2sWBcFc9EtZGbYAcPt5/r8T/IxgHWgPtmERc2Ee5I8YB7pRFJ1Z+tebj97AkMRWfziQ9w/ZPhjM7OUjZBzBwZ28CJGz3b2TFQGJvbbvyMg/LnbiByNLYetboNeLvxqHXQ2zal/GPpS2htC8vwum178eSU215WMCYrbTBhX1Hn8HoqlHYHC+b/Thzek0gkmw4YHMpGDSnFr+wcnZ6en8bnH0/Pyfj8bHT+8eyoPpJp07viCN5X70o48/OaqG9ecQ/tY3Dq1rmNHnWrHpD7SuuH53j7cNQdCNrHMNMqfbVUdD3CdOoOTF17ri30WDt5TregI2y/TQ1lZ9aimWGZ1Mb2fVG2az/TdIRWXAuiR/nyAMIOppous7DHloN1qL6rWaaOgU7HmHpDLE8w3WnYp3+v+tNre599uhBAh2NPl0TgJp6um1tqk8adxpYq5LHjtfHM0gWrf/C40oFe7sAuCazhnFLfwr7DnNLdJpE6ivbuOvY6fzSEMa0chCayg/7HosGg0NzSHiUdQRbdN+p7tPuQ2V7a/k7Q0ur/THKUx+8XCW5WpMLhqKi8ZsJjClQWTU02fH85NMw99IcblKI31fa2bcqn9ndvlP1xISf9Hpz5z8hkInFiPGcP3vrP7LUk94sybg2/Cw/bEzHv2X0VoPqzQMYkF2gUvDEUwmnIVqvL4MRHWyeldpJ14q8sq8Dh3VKktmkzqSIuz5TuGrsbe7+E/f8DAAD//8ac6NU="
}
